// 1. 상수
	final 자료명 변수명;

// 2. 구구단 출력

// 3. 오버로드(오버라이드와 구분)
	// 생성자 오버로드
	생성자가 2개 이상 제공되는 경우를 말한다.
	메서드나 생성자의 매개변수 개수가 다르거나 타입이 다른 경우를 말하며, 리턴타입과는 무관하다.

// 4. 접근제어자
	private -> default -> protected -> public
	 
// 5. 상속
* [면접]
	    * 상속 : 자식클래스 extends 부모클래스 { .... }
	    * - extends : 확장하다의 의미
	    * - 공통으로 사용하는 멤버변수와 멤버메서드를 부모클래스에서 정의한다.
	    * - 부모클래스는 일반적이고 공통적이며, 자식클래스는 구체적이고 유일하다.
	    * 
	    * - 사용이유 : 부모클래스의 멤버변수와 멤버메서드를 재사용.
	    *          중복되는 코드를 줄임으로써 손쉽게 개발, 유지보수 가능
	    * - 부모클래스의 멤버를 private으로 선언한 경우, 자식클래스에서 접근할 수 없다.
	    *   접근제어자 protected의 경우 자식클래스에서 접근 가능
---------------------------------------------------------------------